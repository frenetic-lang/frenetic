OASISFormat: 0.3
OCamlVersion: >= 4.01.0
Name:        frenetic
Version:     1.0.2
Synopsis:    The Frenetic Compiler and Runtime System
Authors:     https://github.com/frenetic-lang/frenetic/contributors
License:     LGPL
Plugins:     META (0.3)
BuildTools:
  ocamlbuild,
  ocamldoc

Flag quickcheck
  Description: build the frenetic.quickcheck library
  Default: false

Flag async
    Description: build the netcore.async library
    Default: false

Library netcore
  Path: lib
  BuildDepends:
    cstruct,
    dprle,
    fieldslib,
    fieldslib.syntax,
    str,
    threads,
    ocamlgraph,
    openflow,
    packet,
    topology,
    sexplib,
    sexplib.syntax
  Modules:
    NetKAT_Lexer,
    NetKAT_Parser,
    NetKAT_Pretty,
    NetKAT_Types,
    NetKAT_Util,
    Semantics,
    LocalCompiler,
    PolicyGenerator

Library async
  Findlibparent: netcore
  Findlibname: async
  Path: async
  Build$: flag(async)
  BuildDepends:
    async,
    core,
    cstruct,
    cstruct.async,
    dprle,
    netcore,
    ocamlgraph,
    openflow,
    openflow.async,
    packet,
    threads,
    textutils,
    topology,
    sexplib.syntax
  Modules:
    Async_Controller

Library quickcheck
  Findlibparent: netcore
  Findlibname: quickcheck
  Path: quickcheck
  Build$: flag(quickcheck) || flag(tests)
  BuildDepends:
    openflow.quickcheck,
    quickcheck,
    netcore
  Modules:
    NetKAT_Arbitrary

Executable testtool
  Path: test
  MainIs: Test.ml
  Build$: flag(tests)
  Install: false
  BuildDepends: 
    oUnit,packet,
    netcore,
    pa_ounit,
    pa_ounit.syntax,
    quickcheck,
    netcore.quickcheck

Test all_tests
  Command: $testtool inline-test-runner netkat
  Run$: flag(tests)
  TestTools: testtool

Executable katnetic
  Path: frenetic
  MainIs: katnetic.ml
  Build$: flag(async)
  Install: false
  BuildDepends:
    async,
    core,
    netcore,
    netcore.async

Executable netkat_test
  Path: frenetic
  MainIs: netkat_test.ml
  Build$: flag(async)
  Install: false
  BuildDepends:
    async,
    core,
    netcore,
    netcore.async