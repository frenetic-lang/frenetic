# OASIS_START
# DO NOT EDIT (digest: a56da596bf8054bafaefe81351a3001b)
version = "4.0.0"
description = "The Frenetic Compiler and Runtime System"
requires =
"base64 camlp4.lib camlp4.extend camlp4 core cstruct ocamlgraph ppx_jane ppx_deriving.eq ppx_deriving.enum str tcpip ulex yojson threads fix"
archive(byte) = "frenetic.cma"
archive(byte, plugin) = "frenetic.cma"
archive(native) = "frenetic.cmxa"
archive(native, plugin) = "frenetic.cmxs"
exists_if = "frenetic.cma"
package "test" (
 version = "4.0.0"
 description = "The Frenetic Compiler and Runtime System"
 requires = "frenetic quickcheck"
 archive(byte) = "test_frenetic.cma"
 archive(byte, plugin) = "test_frenetic.cma"
 archive(native) = "test_frenetic.cmxa"
 archive(native, plugin) = "test_frenetic.cmxs"
 exists_if = "test_frenetic.cma"
)

package "syntax" (
 version = "4.0.0"
 description = "Syntax extension writing NetKAT expressions"
 requires = "camlp4 ulex ipaddr frenetic"
 archive(syntax, preprocessor) = "syntax.cma"
 archive(syntax, toploop) = "syntax.cma"
 archive(syntax, preprocessor, native) = "syntax.cmxa"
 archive(syntax, preprocessor, native, plugin) = "syntax.cmxs"
 exists_if = "syntax.cma"
)

package "async" (
 version = "4.0.0"
 description = "The Frenetic Compiler and Runtime System"
 requires =
 "async cohttp cohttp.async core cstruct cstruct.async frenetic mparser mparser.re ppx_sexp_conv str"
 archive(byte) = "async.cma"
 archive(byte, plugin) = "async.cma"
 archive(native) = "async.cmxa"
 archive(native, plugin) = "async.cmxs"
 exists_if = "async.cma"
)
# OASIS_STOP

