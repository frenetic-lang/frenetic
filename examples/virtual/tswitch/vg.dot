digraph G {
  "(InPort 1 1)";
  "(InPort 1 2)";
  "(InPort 2 1)";
  "(InPort 2 2)";
  "(InPort 3 1)";
  "(InPort 3 2)";
  "(InPort 3 3)";
  "(InPort 3 4)";
  "(InPort 4 1)";
  "(InPort 4 2)";
  "(InPort 4 3)";
  "(InPort 4 4)";
  "(InPort 5 1)";
  "(InPort 5 3)";
  "(InPort 6 1)";
  "(InPort 6 3)";
  "(InPort 7 1)";
  "(InPort 7 3)";
  "(InPort 8 1)";
  "(InPort 8 3)";
  "(OutPort 1 1)";
  "(OutPort 1 2)";
  "(OutPort 2 1)";
  "(OutPort 2 2)";
  "(OutPort 3 1)";
  "(OutPort 3 2)";
  "(OutPort 3 3)";
  "(OutPort 3 4)";
  "(OutPort 4 1)";
  "(OutPort 4 2)";
  "(OutPort 4 3)";
  "(OutPort 4 4)";
  "(OutPort 5 1)";
  "(OutPort 5 3)";
  "(OutPort 6 1)";
  "(OutPort 6 3)";
  "(OutPort 7 1)";
  "(OutPort 7 3)";
  "(OutPort 8 1)";
  "(OutPort 8 3)";
  
  subgraph cluster_1 { "(OutPort 1 2)";"(OutPort 1 1)";"(InPort 1 2)";"(InPort 1 1)";
     };
  subgraph cluster_2 { "(OutPort 2 2)";"(OutPort 2 1)";"(InPort 2 2)";"(InPort 2 1)";
     };
  subgraph cluster_3 { "(OutPort 3 4)";"(OutPort 3 3)";"(OutPort 3 2)";"(OutPort 3 1)";"(InPort 3 4)";"(InPort 3 3)";"(InPort 3 2)";"(InPort 3 1)";
     };
  subgraph cluster_4 { "(OutPort 4 4)";"(OutPort 4 3)";"(OutPort 4 2)";"(OutPort 4 1)";"(InPort 4 4)";"(InPort 4 3)";"(InPort 4 2)";"(InPort 4 1)";
     };
  subgraph cluster_5 { "(OutPort 5 3)";"(OutPort 5 1)";"(InPort 5 3)";"(InPort 5 1)";
     };
  subgraph cluster_6 { "(OutPort 6 3)";"(OutPort 6 1)";"(InPort 6 3)";"(InPort 6 1)";
     };
  subgraph cluster_7 { "(OutPort 7 3)";"(OutPort 7 1)";"(InPort 7 3)";"(InPort 7 1)";
     };
  subgraph cluster_8 { "(OutPort 8 3)";"(OutPort 8 1)";"(InPort 8 3)";"(InPort 8 1)";
     };
  
  "(InPort 1 1)" -> "(OutPort 1 1)";
  "(InPort 1 1)" -> "(OutPort 1 2)";
  "(InPort 1 2)" -> "(OutPort 1 1)";
  "(InPort 1 2)" -> "(OutPort 1 2)";
  "(InPort 2 1)" -> "(OutPort 2 1)";
  "(InPort 2 1)" -> "(OutPort 2 2)";
  "(InPort 2 2)" -> "(OutPort 2 1)";
  "(InPort 2 2)" -> "(OutPort 2 2)";
  "(InPort 3 1)" -> "(OutPort 3 1)";
  "(InPort 3 1)" -> "(OutPort 3 2)";
  "(InPort 3 1)" -> "(OutPort 3 3)";
  "(InPort 3 1)" -> "(OutPort 3 4)";
  "(InPort 3 2)" -> "(OutPort 3 1)";
  "(InPort 3 2)" -> "(OutPort 3 2)";
  "(InPort 3 2)" -> "(OutPort 3 3)";
  "(InPort 3 2)" -> "(OutPort 3 4)";
  "(InPort 3 3)" -> "(OutPort 3 1)";
  "(InPort 3 3)" -> "(OutPort 3 2)";
  "(InPort 3 3)" -> "(OutPort 3 3)";
  "(InPort 3 3)" -> "(OutPort 3 4)";
  "(InPort 3 4)" -> "(OutPort 3 1)";
  "(InPort 3 4)" -> "(OutPort 3 2)";
  "(InPort 3 4)" -> "(OutPort 3 3)";
  "(InPort 3 4)" -> "(OutPort 3 4)";
  "(InPort 4 1)" -> "(OutPort 4 1)";
  "(InPort 4 1)" -> "(OutPort 4 2)";
  "(InPort 4 1)" -> "(OutPort 4 3)";
  "(InPort 4 1)" -> "(OutPort 4 4)";
  "(InPort 4 2)" -> "(OutPort 4 1)";
  "(InPort 4 2)" -> "(OutPort 4 2)";
  "(InPort 4 2)" -> "(OutPort 4 3)";
  "(InPort 4 2)" -> "(OutPort 4 4)";
  "(InPort 4 3)" -> "(OutPort 4 1)";
  "(InPort 4 3)" -> "(OutPort 4 2)";
  "(InPort 4 3)" -> "(OutPort 4 3)";
  "(InPort 4 3)" -> "(OutPort 4 4)";
  "(InPort 4 4)" -> "(OutPort 4 1)";
  "(InPort 4 4)" -> "(OutPort 4 2)";
  "(InPort 4 4)" -> "(OutPort 4 3)";
  "(InPort 4 4)" -> "(OutPort 4 4)";
  "(InPort 5 1)" -> "(OutPort 5 1)";
  "(InPort 5 1)" -> "(OutPort 5 3)";
  "(InPort 5 3)" -> "(OutPort 5 1)";
  "(InPort 5 3)" -> "(OutPort 5 3)";
  "(InPort 6 1)" -> "(OutPort 6 1)";
  "(InPort 6 1)" -> "(OutPort 6 3)";
  "(InPort 6 3)" -> "(OutPort 6 1)";
  "(InPort 6 3)" -> "(OutPort 6 3)";
  "(InPort 7 1)" -> "(OutPort 7 1)";
  "(InPort 7 1)" -> "(OutPort 7 3)";
  "(InPort 7 3)" -> "(OutPort 7 1)";
  "(InPort 7 3)" -> "(OutPort 7 3)";
  "(InPort 8 1)" -> "(OutPort 8 1)";
  "(InPort 8 1)" -> "(OutPort 8 3)";
  "(InPort 8 3)" -> "(OutPort 8 1)";
  "(InPort 8 3)" -> "(OutPort 8 3)";
  "(OutPort 1 1)" -> "(InPort 3 1)";
  "(OutPort 1 2)" -> "(InPort 4 1)";
  "(OutPort 2 1)" -> "(InPort 3 2)";
  "(OutPort 2 2)" -> "(InPort 4 2)";
  "(OutPort 3 1)" -> "(InPort 1 1)";
  "(OutPort 3 2)" -> "(InPort 2 1)";
  "(OutPort 3 3)" -> "(InPort 5 1)";
  "(OutPort 3 4)" -> "(InPort 6 1)";
  "(OutPort 4 1)" -> "(InPort 1 2)";
  "(OutPort 4 2)" -> "(InPort 2 2)";
  "(OutPort 4 3)" -> "(InPort 7 1)";
  "(OutPort 4 4)" -> "(InPort 8 1)";
  "(OutPort 5 1)" -> "(InPort 3 3)";
  "(OutPort 6 1)" -> "(InPort 3 4)";
  "(OutPort 7 1)" -> "(InPort 4 3)";
  "(OutPort 8 1)" -> "(InPort 4 4)";
  
  }