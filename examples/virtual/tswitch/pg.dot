digraph G {
  "(InPort 1 1)";
  "(InPort 1 2)";
  "(InPort 1 3)";
  "(InPort 1 4)";
  "(InPort 2 1)";
  "(InPort 2 2)";
  "(InPort 2 3)";
  "(InPort 2 4)";
  "(InPort 3 1)";
  "(InPort 3 2)";
  "(InPort 3 3)";
  "(InPort 3 4)";
  "(InPort 4 1)";
  "(InPort 4 2)";
  "(InPort 4 3)";
  "(InPort 4 4)";
  "(InPort 5 1)";
  "(InPort 5 2)";
  "(InPort 5 3)";
  "(InPort 5 4)";
  "(InPort 6 1)";
  "(InPort 6 2)";
  "(InPort 6 3)";
  "(InPort 6 4)";
  "(InPort 7 1)";
  "(InPort 7 2)";
  "(InPort 7 3)";
  "(InPort 7 4)";
  "(InPort 8 1)";
  "(InPort 8 2)";
  "(InPort 8 3)";
  "(InPort 8 4)";
  "(InPort 9 1)";
  "(InPort 9 2)";
  "(InPort 9 3)";
  "(InPort 9 4)";
  "(InPort 10 1)";
  "(InPort 10 2)";
  "(InPort 10 3)";
  "(InPort 10 4)";
  "(InPort 11 1)";
  "(InPort 11 2)";
  "(InPort 11 3)";
  "(InPort 11 4)";
  "(InPort 12 1)";
  "(InPort 12 2)";
  "(InPort 12 3)";
  "(InPort 12 4)";
  "(InPort 13 1)";
  "(InPort 13 2)";
  "(InPort 13 3)";
  "(InPort 13 4)";
  "(InPort 14 1)";
  "(InPort 14 2)";
  "(InPort 14 3)";
  "(InPort 14 4)";
  "(InPort 15 1)";
  "(InPort 15 2)";
  "(InPort 15 3)";
  "(InPort 15 4)";
  "(InPort 16 1)";
  "(InPort 16 2)";
  "(InPort 16 3)";
  "(InPort 16 4)";
  "(InPort 17 1)";
  "(InPort 17 2)";
  "(InPort 17 3)";
  "(InPort 17 4)";
  "(InPort 18 1)";
  "(InPort 18 2)";
  "(InPort 18 3)";
  "(InPort 18 4)";
  "(InPort 19 1)";
  "(InPort 19 2)";
  "(InPort 19 3)";
  "(InPort 19 4)";
  "(InPort 20 1)";
  "(InPort 20 2)";
  "(InPort 20 3)";
  "(InPort 20 4)";
  "(OutPort 1 1)";
  "(OutPort 1 2)";
  "(OutPort 1 3)";
  "(OutPort 1 4)";
  "(OutPort 2 1)";
  "(OutPort 2 2)";
  "(OutPort 2 3)";
  "(OutPort 2 4)";
  "(OutPort 3 1)";
  "(OutPort 3 2)";
  "(OutPort 3 3)";
  "(OutPort 3 4)";
  "(OutPort 4 1)";
  "(OutPort 4 2)";
  "(OutPort 4 3)";
  "(OutPort 4 4)";
  "(OutPort 5 1)";
  "(OutPort 5 2)";
  "(OutPort 5 3)";
  "(OutPort 5 4)";
  "(OutPort 6 1)";
  "(OutPort 6 2)";
  "(OutPort 6 3)";
  "(OutPort 6 4)";
  "(OutPort 7 1)";
  "(OutPort 7 2)";
  "(OutPort 7 3)";
  "(OutPort 7 4)";
  "(OutPort 8 1)";
  "(OutPort 8 2)";
  "(OutPort 8 3)";
  "(OutPort 8 4)";
  "(OutPort 9 1)";
  "(OutPort 9 2)";
  "(OutPort 9 3)";
  "(OutPort 9 4)";
  "(OutPort 10 1)";
  "(OutPort 10 2)";
  "(OutPort 10 3)";
  "(OutPort 10 4)";
  "(OutPort 11 1)";
  "(OutPort 11 2)";
  "(OutPort 11 3)";
  "(OutPort 11 4)";
  "(OutPort 12 1)";
  "(OutPort 12 2)";
  "(OutPort 12 3)";
  "(OutPort 12 4)";
  "(OutPort 13 1)";
  "(OutPort 13 2)";
  "(OutPort 13 3)";
  "(OutPort 13 4)";
  "(OutPort 14 1)";
  "(OutPort 14 2)";
  "(OutPort 14 3)";
  "(OutPort 14 4)";
  "(OutPort 15 1)";
  "(OutPort 15 2)";
  "(OutPort 15 3)";
  "(OutPort 15 4)";
  "(OutPort 16 1)";
  "(OutPort 16 2)";
  "(OutPort 16 3)";
  "(OutPort 16 4)";
  "(OutPort 17 1)";
  "(OutPort 17 2)";
  "(OutPort 17 3)";
  "(OutPort 17 4)";
  "(OutPort 18 1)";
  "(OutPort 18 2)";
  "(OutPort 18 3)";
  "(OutPort 18 4)";
  "(OutPort 19 1)";
  "(OutPort 19 2)";
  "(OutPort 19 3)";
  "(OutPort 19 4)";
  "(OutPort 20 1)";
  "(OutPort 20 2)";
  "(OutPort 20 3)";
  "(OutPort 20 4)";
  
  subgraph cluster_1 { "(OutPort 1 4)";"(OutPort 1 3)";"(OutPort 1 2)";"(OutPort 1 1)";"(InPort 1 4)";"(InPort 1 3)";"(InPort 1 2)";"(InPort 1 1)";
     };
  subgraph cluster_10 { "(OutPort 10 4)";"(OutPort 10 3)";"(OutPort 10 2)";"(OutPort 10 1)";"(InPort 10 4)";"(InPort 10 3)";"(InPort 10 2)";"(InPort 10 1)";
     };
  subgraph cluster_11 { "(OutPort 11 4)";"(OutPort 11 3)";"(OutPort 11 2)";"(OutPort 11 1)";"(InPort 11 4)";"(InPort 11 3)";"(InPort 11 2)";"(InPort 11 1)";
     };
  subgraph cluster_12 { "(OutPort 12 4)";"(OutPort 12 3)";"(OutPort 12 2)";"(OutPort 12 1)";"(InPort 12 4)";"(InPort 12 3)";"(InPort 12 2)";"(InPort 12 1)";
     };
  subgraph cluster_13 { "(OutPort 13 4)";"(OutPort 13 3)";"(OutPort 13 2)";"(OutPort 13 1)";"(InPort 13 4)";"(InPort 13 3)";"(InPort 13 2)";"(InPort 13 1)";
     };
  subgraph cluster_14 { "(OutPort 14 4)";"(OutPort 14 3)";"(OutPort 14 2)";"(OutPort 14 1)";"(InPort 14 4)";"(InPort 14 3)";"(InPort 14 2)";"(InPort 14 1)";
     };
  subgraph cluster_15 { "(OutPort 15 4)";"(OutPort 15 3)";"(OutPort 15 2)";"(OutPort 15 1)";"(InPort 15 4)";"(InPort 15 3)";"(InPort 15 2)";"(InPort 15 1)";
     };
  subgraph cluster_16 { "(OutPort 16 4)";"(OutPort 16 3)";"(OutPort 16 2)";"(OutPort 16 1)";"(InPort 16 4)";"(InPort 16 3)";"(InPort 16 2)";"(InPort 16 1)";
     };
  subgraph cluster_17 { "(OutPort 17 4)";"(OutPort 17 3)";"(OutPort 17 2)";"(OutPort 17 1)";"(InPort 17 4)";"(InPort 17 3)";"(InPort 17 2)";"(InPort 17 1)";
     };
  subgraph cluster_18 { "(OutPort 18 4)";"(OutPort 18 3)";"(OutPort 18 2)";"(OutPort 18 1)";"(InPort 18 4)";"(InPort 18 3)";"(InPort 18 2)";"(InPort 18 1)";
     };
  subgraph cluster_19 { "(OutPort 19 4)";"(OutPort 19 3)";"(OutPort 19 2)";"(OutPort 19 1)";"(InPort 19 4)";"(InPort 19 3)";"(InPort 19 2)";"(InPort 19 1)";
     };
  subgraph cluster_2 { "(OutPort 2 4)";"(OutPort 2 3)";"(OutPort 2 2)";"(OutPort 2 1)";"(InPort 2 4)";"(InPort 2 3)";"(InPort 2 2)";"(InPort 2 1)";
     };
  subgraph cluster_20 { "(OutPort 20 4)";"(OutPort 20 3)";"(OutPort 20 2)";"(OutPort 20 1)";"(InPort 20 4)";"(InPort 20 3)";"(InPort 20 2)";"(InPort 20 1)";
     };
  subgraph cluster_3 { "(OutPort 3 4)";"(OutPort 3 3)";"(OutPort 3 2)";"(OutPort 3 1)";"(InPort 3 4)";"(InPort 3 3)";"(InPort 3 2)";"(InPort 3 1)";
     };
  subgraph cluster_4 { "(OutPort 4 4)";"(OutPort 4 3)";"(OutPort 4 2)";"(OutPort 4 1)";"(InPort 4 4)";"(InPort 4 3)";"(InPort 4 2)";"(InPort 4 1)";
     };
  subgraph cluster_5 { "(OutPort 5 4)";"(OutPort 5 3)";"(OutPort 5 2)";"(OutPort 5 1)";"(InPort 5 4)";"(InPort 5 3)";"(InPort 5 2)";"(InPort 5 1)";
     };
  subgraph cluster_6 { "(OutPort 6 4)";"(OutPort 6 3)";"(OutPort 6 2)";"(OutPort 6 1)";"(InPort 6 4)";"(InPort 6 3)";"(InPort 6 2)";"(InPort 6 1)";
     };
  subgraph cluster_7 { "(OutPort 7 4)";"(OutPort 7 3)";"(OutPort 7 2)";"(OutPort 7 1)";"(InPort 7 4)";"(InPort 7 3)";"(InPort 7 2)";"(InPort 7 1)";
     };
  subgraph cluster_8 { "(OutPort 8 4)";"(OutPort 8 3)";"(OutPort 8 2)";"(OutPort 8 1)";"(InPort 8 4)";"(InPort 8 3)";"(InPort 8 2)";"(InPort 8 1)";
     };
  subgraph cluster_9 { "(OutPort 9 4)";"(OutPort 9 3)";"(OutPort 9 2)";"(OutPort 9 1)";"(InPort 9 4)";"(InPort 9 3)";"(InPort 9 2)";"(InPort 9 1)";
     };
  
  "(InPort 1 1)" -> "(OutPort 1 1)";
  "(InPort 1 1)" -> "(OutPort 1 2)";
  "(InPort 1 1)" -> "(OutPort 1 3)";
  "(InPort 1 1)" -> "(OutPort 1 4)";
  "(InPort 1 2)" -> "(OutPort 1 1)";
  "(InPort 1 2)" -> "(OutPort 1 2)";
  "(InPort 1 2)" -> "(OutPort 1 3)";
  "(InPort 1 2)" -> "(OutPort 1 4)";
  "(InPort 1 3)" -> "(OutPort 1 1)";
  "(InPort 1 3)" -> "(OutPort 1 2)";
  "(InPort 1 3)" -> "(OutPort 1 3)";
  "(InPort 1 3)" -> "(OutPort 1 4)";
  "(InPort 1 4)" -> "(OutPort 1 1)";
  "(InPort 1 4)" -> "(OutPort 1 2)";
  "(InPort 1 4)" -> "(OutPort 1 3)";
  "(InPort 1 4)" -> "(OutPort 1 4)";
  "(InPort 2 1)" -> "(OutPort 2 1)";
  "(InPort 2 1)" -> "(OutPort 2 2)";
  "(InPort 2 1)" -> "(OutPort 2 3)";
  "(InPort 2 1)" -> "(OutPort 2 4)";
  "(InPort 2 2)" -> "(OutPort 2 1)";
  "(InPort 2 2)" -> "(OutPort 2 2)";
  "(InPort 2 2)" -> "(OutPort 2 3)";
  "(InPort 2 2)" -> "(OutPort 2 4)";
  "(InPort 2 3)" -> "(OutPort 2 1)";
  "(InPort 2 3)" -> "(OutPort 2 2)";
  "(InPort 2 3)" -> "(OutPort 2 3)";
  "(InPort 2 3)" -> "(OutPort 2 4)";
  "(InPort 2 4)" -> "(OutPort 2 1)";
  "(InPort 2 4)" -> "(OutPort 2 2)";
  "(InPort 2 4)" -> "(OutPort 2 3)";
  "(InPort 2 4)" -> "(OutPort 2 4)";
  "(InPort 3 1)" -> "(OutPort 3 1)";
  "(InPort 3 1)" -> "(OutPort 3 2)";
  "(InPort 3 1)" -> "(OutPort 3 3)";
  "(InPort 3 1)" -> "(OutPort 3 4)";
  "(InPort 3 2)" -> "(OutPort 3 1)";
  "(InPort 3 2)" -> "(OutPort 3 2)";
  "(InPort 3 2)" -> "(OutPort 3 3)";
  "(InPort 3 2)" -> "(OutPort 3 4)";
  "(InPort 3 3)" -> "(OutPort 3 1)";
  "(InPort 3 3)" -> "(OutPort 3 2)";
  "(InPort 3 3)" -> "(OutPort 3 3)";
  "(InPort 3 3)" -> "(OutPort 3 4)";
  "(InPort 3 4)" -> "(OutPort 3 1)";
  "(InPort 3 4)" -> "(OutPort 3 2)";
  "(InPort 3 4)" -> "(OutPort 3 3)";
  "(InPort 3 4)" -> "(OutPort 3 4)";
  "(InPort 4 1)" -> "(OutPort 4 1)";
  "(InPort 4 1)" -> "(OutPort 4 2)";
  "(InPort 4 1)" -> "(OutPort 4 3)";
  "(InPort 4 1)" -> "(OutPort 4 4)";
  "(InPort 4 2)" -> "(OutPort 4 1)";
  "(InPort 4 2)" -> "(OutPort 4 2)";
  "(InPort 4 2)" -> "(OutPort 4 3)";
  "(InPort 4 2)" -> "(OutPort 4 4)";
  "(InPort 4 3)" -> "(OutPort 4 1)";
  "(InPort 4 3)" -> "(OutPort 4 2)";
  "(InPort 4 3)" -> "(OutPort 4 3)";
  "(InPort 4 3)" -> "(OutPort 4 4)";
  "(InPort 4 4)" -> "(OutPort 4 1)";
  "(InPort 4 4)" -> "(OutPort 4 2)";
  "(InPort 4 4)" -> "(OutPort 4 3)";
  "(InPort 4 4)" -> "(OutPort 4 4)";
  "(InPort 5 1)" -> "(OutPort 5 1)";
  "(InPort 5 1)" -> "(OutPort 5 2)";
  "(InPort 5 1)" -> "(OutPort 5 3)";
  "(InPort 5 1)" -> "(OutPort 5 4)";
  "(InPort 5 2)" -> "(OutPort 5 1)";
  "(InPort 5 2)" -> "(OutPort 5 2)";
  "(InPort 5 2)" -> "(OutPort 5 3)";
  "(InPort 5 2)" -> "(OutPort 5 4)";
  "(InPort 5 3)" -> "(OutPort 5 1)";
  "(InPort 5 3)" -> "(OutPort 5 2)";
  "(InPort 5 3)" -> "(OutPort 5 3)";
  "(InPort 5 3)" -> "(OutPort 5 4)";
  "(InPort 5 4)" -> "(OutPort 5 1)";
  "(InPort 5 4)" -> "(OutPort 5 2)";
  "(InPort 5 4)" -> "(OutPort 5 3)";
  "(InPort 5 4)" -> "(OutPort 5 4)";
  "(InPort 6 1)" -> "(OutPort 6 1)";
  "(InPort 6 1)" -> "(OutPort 6 2)";
  "(InPort 6 1)" -> "(OutPort 6 3)";
  "(InPort 6 1)" -> "(OutPort 6 4)";
  "(InPort 6 2)" -> "(OutPort 6 1)";
  "(InPort 6 2)" -> "(OutPort 6 2)";
  "(InPort 6 2)" -> "(OutPort 6 3)";
  "(InPort 6 2)" -> "(OutPort 6 4)";
  "(InPort 6 3)" -> "(OutPort 6 1)";
  "(InPort 6 3)" -> "(OutPort 6 2)";
  "(InPort 6 3)" -> "(OutPort 6 3)";
  "(InPort 6 3)" -> "(OutPort 6 4)";
  "(InPort 6 4)" -> "(OutPort 6 1)";
  "(InPort 6 4)" -> "(OutPort 6 2)";
  "(InPort 6 4)" -> "(OutPort 6 3)";
  "(InPort 6 4)" -> "(OutPort 6 4)";
  "(InPort 7 1)" -> "(OutPort 7 1)";
  "(InPort 7 1)" -> "(OutPort 7 2)";
  "(InPort 7 1)" -> "(OutPort 7 3)";
  "(InPort 7 1)" -> "(OutPort 7 4)";
  "(InPort 7 2)" -> "(OutPort 7 1)";
  "(InPort 7 2)" -> "(OutPort 7 2)";
  "(InPort 7 2)" -> "(OutPort 7 3)";
  "(InPort 7 2)" -> "(OutPort 7 4)";
  "(InPort 7 3)" -> "(OutPort 7 1)";
  "(InPort 7 3)" -> "(OutPort 7 2)";
  "(InPort 7 3)" -> "(OutPort 7 3)";
  "(InPort 7 3)" -> "(OutPort 7 4)";
  "(InPort 7 4)" -> "(OutPort 7 1)";
  "(InPort 7 4)" -> "(OutPort 7 2)";
  "(InPort 7 4)" -> "(OutPort 7 3)";
  "(InPort 7 4)" -> "(OutPort 7 4)";
  "(InPort 8 1)" -> "(OutPort 8 1)";
  "(InPort 8 1)" -> "(OutPort 8 2)";
  "(InPort 8 1)" -> "(OutPort 8 3)";
  "(InPort 8 1)" -> "(OutPort 8 4)";
  "(InPort 8 2)" -> "(OutPort 8 1)";
  "(InPort 8 2)" -> "(OutPort 8 2)";
  "(InPort 8 2)" -> "(OutPort 8 3)";
  "(InPort 8 2)" -> "(OutPort 8 4)";
  "(InPort 8 3)" -> "(OutPort 8 1)";
  "(InPort 8 3)" -> "(OutPort 8 2)";
  "(InPort 8 3)" -> "(OutPort 8 3)";
  "(InPort 8 3)" -> "(OutPort 8 4)";
  "(InPort 8 4)" -> "(OutPort 8 1)";
  "(InPort 8 4)" -> "(OutPort 8 2)";
  "(InPort 8 4)" -> "(OutPort 8 3)";
  "(InPort 8 4)" -> "(OutPort 8 4)";
  "(InPort 9 1)" -> "(OutPort 9 1)";
  "(InPort 9 1)" -> "(OutPort 9 2)";
  "(InPort 9 1)" -> "(OutPort 9 3)";
  "(InPort 9 1)" -> "(OutPort 9 4)";
  "(InPort 9 2)" -> "(OutPort 9 1)";
  "(InPort 9 2)" -> "(OutPort 9 2)";
  "(InPort 9 2)" -> "(OutPort 9 3)";
  "(InPort 9 2)" -> "(OutPort 9 4)";
  "(InPort 9 3)" -> "(OutPort 9 1)";
  "(InPort 9 3)" -> "(OutPort 9 2)";
  "(InPort 9 3)" -> "(OutPort 9 3)";
  "(InPort 9 3)" -> "(OutPort 9 4)";
  "(InPort 9 4)" -> "(OutPort 9 1)";
  "(InPort 9 4)" -> "(OutPort 9 2)";
  "(InPort 9 4)" -> "(OutPort 9 3)";
  "(InPort 9 4)" -> "(OutPort 9 4)";
  "(InPort 10 1)" -> "(OutPort 10 1)";
  "(InPort 10 1)" -> "(OutPort 10 2)";
  "(InPort 10 1)" -> "(OutPort 10 3)";
  "(InPort 10 1)" -> "(OutPort 10 4)";
  "(InPort 10 2)" -> "(OutPort 10 1)";
  "(InPort 10 2)" -> "(OutPort 10 2)";
  "(InPort 10 2)" -> "(OutPort 10 3)";
  "(InPort 10 2)" -> "(OutPort 10 4)";
  "(InPort 10 3)" -> "(OutPort 10 1)";
  "(InPort 10 3)" -> "(OutPort 10 2)";
  "(InPort 10 3)" -> "(OutPort 10 3)";
  "(InPort 10 3)" -> "(OutPort 10 4)";
  "(InPort 10 4)" -> "(OutPort 10 1)";
  "(InPort 10 4)" -> "(OutPort 10 2)";
  "(InPort 10 4)" -> "(OutPort 10 3)";
  "(InPort 10 4)" -> "(OutPort 10 4)";
  "(InPort 11 1)" -> "(OutPort 11 1)";
  "(InPort 11 1)" -> "(OutPort 11 2)";
  "(InPort 11 1)" -> "(OutPort 11 3)";
  "(InPort 11 1)" -> "(OutPort 11 4)";
  "(InPort 11 2)" -> "(OutPort 11 1)";
  "(InPort 11 2)" -> "(OutPort 11 2)";
  "(InPort 11 2)" -> "(OutPort 11 3)";
  "(InPort 11 2)" -> "(OutPort 11 4)";
  "(InPort 11 3)" -> "(OutPort 11 1)";
  "(InPort 11 3)" -> "(OutPort 11 2)";
  "(InPort 11 3)" -> "(OutPort 11 3)";
  "(InPort 11 3)" -> "(OutPort 11 4)";
  "(InPort 11 4)" -> "(OutPort 11 1)";
  "(InPort 11 4)" -> "(OutPort 11 2)";
  "(InPort 11 4)" -> "(OutPort 11 3)";
  "(InPort 11 4)" -> "(OutPort 11 4)";
  "(InPort 12 1)" -> "(OutPort 12 1)";
  "(InPort 12 1)" -> "(OutPort 12 2)";
  "(InPort 12 1)" -> "(OutPort 12 3)";
  "(InPort 12 1)" -> "(OutPort 12 4)";
  "(InPort 12 2)" -> "(OutPort 12 1)";
  "(InPort 12 2)" -> "(OutPort 12 2)";
  "(InPort 12 2)" -> "(OutPort 12 3)";
  "(InPort 12 2)" -> "(OutPort 12 4)";
  "(InPort 12 3)" -> "(OutPort 12 1)";
  "(InPort 12 3)" -> "(OutPort 12 2)";
  "(InPort 12 3)" -> "(OutPort 12 3)";
  "(InPort 12 3)" -> "(OutPort 12 4)";
  "(InPort 12 4)" -> "(OutPort 12 1)";
  "(InPort 12 4)" -> "(OutPort 12 2)";
  "(InPort 12 4)" -> "(OutPort 12 3)";
  "(InPort 12 4)" -> "(OutPort 12 4)";
  "(InPort 13 1)" -> "(OutPort 13 1)";
  "(InPort 13 1)" -> "(OutPort 13 2)";
  "(InPort 13 1)" -> "(OutPort 13 3)";
  "(InPort 13 1)" -> "(OutPort 13 4)";
  "(InPort 13 2)" -> "(OutPort 13 1)";
  "(InPort 13 2)" -> "(OutPort 13 2)";
  "(InPort 13 2)" -> "(OutPort 13 3)";
  "(InPort 13 2)" -> "(OutPort 13 4)";
  "(InPort 13 3)" -> "(OutPort 13 1)";
  "(InPort 13 3)" -> "(OutPort 13 2)";
  "(InPort 13 3)" -> "(OutPort 13 3)";
  "(InPort 13 3)" -> "(OutPort 13 4)";
  "(InPort 13 4)" -> "(OutPort 13 1)";
  "(InPort 13 4)" -> "(OutPort 13 2)";
  "(InPort 13 4)" -> "(OutPort 13 3)";
  "(InPort 13 4)" -> "(OutPort 13 4)";
  "(InPort 14 1)" -> "(OutPort 14 1)";
  "(InPort 14 1)" -> "(OutPort 14 2)";
  "(InPort 14 1)" -> "(OutPort 14 3)";
  "(InPort 14 1)" -> "(OutPort 14 4)";
  "(InPort 14 2)" -> "(OutPort 14 1)";
  "(InPort 14 2)" -> "(OutPort 14 2)";
  "(InPort 14 2)" -> "(OutPort 14 3)";
  "(InPort 14 2)" -> "(OutPort 14 4)";
  "(InPort 14 3)" -> "(OutPort 14 1)";
  "(InPort 14 3)" -> "(OutPort 14 2)";
  "(InPort 14 3)" -> "(OutPort 14 3)";
  "(InPort 14 3)" -> "(OutPort 14 4)";
  "(InPort 14 4)" -> "(OutPort 14 1)";
  "(InPort 14 4)" -> "(OutPort 14 2)";
  "(InPort 14 4)" -> "(OutPort 14 3)";
  "(InPort 14 4)" -> "(OutPort 14 4)";
  "(InPort 15 1)" -> "(OutPort 15 1)";
  "(InPort 15 1)" -> "(OutPort 15 2)";
  "(InPort 15 1)" -> "(OutPort 15 3)";
  "(InPort 15 1)" -> "(OutPort 15 4)";
  "(InPort 15 2)" -> "(OutPort 15 1)";
  "(InPort 15 2)" -> "(OutPort 15 2)";
  "(InPort 15 2)" -> "(OutPort 15 3)";
  "(InPort 15 2)" -> "(OutPort 15 4)";
  "(InPort 15 3)" -> "(OutPort 15 1)";
  "(InPort 15 3)" -> "(OutPort 15 2)";
  "(InPort 15 3)" -> "(OutPort 15 3)";
  "(InPort 15 3)" -> "(OutPort 15 4)";
  "(InPort 15 4)" -> "(OutPort 15 1)";
  "(InPort 15 4)" -> "(OutPort 15 2)";
  "(InPort 15 4)" -> "(OutPort 15 3)";
  "(InPort 15 4)" -> "(OutPort 15 4)";
  "(InPort 16 1)" -> "(OutPort 16 1)";
  "(InPort 16 1)" -> "(OutPort 16 2)";
  "(InPort 16 1)" -> "(OutPort 16 3)";
  "(InPort 16 1)" -> "(OutPort 16 4)";
  "(InPort 16 2)" -> "(OutPort 16 1)";
  "(InPort 16 2)" -> "(OutPort 16 2)";
  "(InPort 16 2)" -> "(OutPort 16 3)";
  "(InPort 16 2)" -> "(OutPort 16 4)";
  "(InPort 16 3)" -> "(OutPort 16 1)";
  "(InPort 16 3)" -> "(OutPort 16 2)";
  "(InPort 16 3)" -> "(OutPort 16 3)";
  "(InPort 16 3)" -> "(OutPort 16 4)";
  "(InPort 16 4)" -> "(OutPort 16 1)";
  "(InPort 16 4)" -> "(OutPort 16 2)";
  "(InPort 16 4)" -> "(OutPort 16 3)";
  "(InPort 16 4)" -> "(OutPort 16 4)";
  "(InPort 17 1)" -> "(OutPort 17 1)";
  "(InPort 17 1)" -> "(OutPort 17 2)";
  "(InPort 17 1)" -> "(OutPort 17 3)";
  "(InPort 17 1)" -> "(OutPort 17 4)";
  "(InPort 17 2)" -> "(OutPort 17 1)";
  "(InPort 17 2)" -> "(OutPort 17 2)";
  "(InPort 17 2)" -> "(OutPort 17 3)";
  "(InPort 17 2)" -> "(OutPort 17 4)";
  "(InPort 17 3)" -> "(OutPort 17 1)";
  "(InPort 17 3)" -> "(OutPort 17 2)";
  "(InPort 17 3)" -> "(OutPort 17 3)";
  "(InPort 17 3)" -> "(OutPort 17 4)";
  "(InPort 17 4)" -> "(OutPort 17 1)";
  "(InPort 17 4)" -> "(OutPort 17 2)";
  "(InPort 17 4)" -> "(OutPort 17 3)";
  "(InPort 17 4)" -> "(OutPort 17 4)";
  "(InPort 18 1)" -> "(OutPort 18 1)";
  "(InPort 18 1)" -> "(OutPort 18 2)";
  "(InPort 18 1)" -> "(OutPort 18 3)";
  "(InPort 18 1)" -> "(OutPort 18 4)";
  "(InPort 18 2)" -> "(OutPort 18 1)";
  "(InPort 18 2)" -> "(OutPort 18 2)";
  "(InPort 18 2)" -> "(OutPort 18 3)";
  "(InPort 18 2)" -> "(OutPort 18 4)";
  "(InPort 18 3)" -> "(OutPort 18 1)";
  "(InPort 18 3)" -> "(OutPort 18 2)";
  "(InPort 18 3)" -> "(OutPort 18 3)";
  "(InPort 18 3)" -> "(OutPort 18 4)";
  "(InPort 18 4)" -> "(OutPort 18 1)";
  "(InPort 18 4)" -> "(OutPort 18 2)";
  "(InPort 18 4)" -> "(OutPort 18 3)";
  "(InPort 18 4)" -> "(OutPort 18 4)";
  "(InPort 19 1)" -> "(OutPort 19 1)";
  "(InPort 19 1)" -> "(OutPort 19 2)";
  "(InPort 19 1)" -> "(OutPort 19 3)";
  "(InPort 19 1)" -> "(OutPort 19 4)";
  "(InPort 19 2)" -> "(OutPort 19 1)";
  "(InPort 19 2)" -> "(OutPort 19 2)";
  "(InPort 19 2)" -> "(OutPort 19 3)";
  "(InPort 19 2)" -> "(OutPort 19 4)";
  "(InPort 19 3)" -> "(OutPort 19 1)";
  "(InPort 19 3)" -> "(OutPort 19 2)";
  "(InPort 19 3)" -> "(OutPort 19 3)";
  "(InPort 19 3)" -> "(OutPort 19 4)";
  "(InPort 19 4)" -> "(OutPort 19 1)";
  "(InPort 19 4)" -> "(OutPort 19 2)";
  "(InPort 19 4)" -> "(OutPort 19 3)";
  "(InPort 19 4)" -> "(OutPort 19 4)";
  "(InPort 20 1)" -> "(OutPort 20 1)";
  "(InPort 20 1)" -> "(OutPort 20 2)";
  "(InPort 20 1)" -> "(OutPort 20 3)";
  "(InPort 20 1)" -> "(OutPort 20 4)";
  "(InPort 20 2)" -> "(OutPort 20 1)";
  "(InPort 20 2)" -> "(OutPort 20 2)";
  "(InPort 20 2)" -> "(OutPort 20 3)";
  "(InPort 20 2)" -> "(OutPort 20 4)";
  "(InPort 20 3)" -> "(OutPort 20 1)";
  "(InPort 20 3)" -> "(OutPort 20 2)";
  "(InPort 20 3)" -> "(OutPort 20 3)";
  "(InPort 20 3)" -> "(OutPort 20 4)";
  "(InPort 20 4)" -> "(OutPort 20 1)";
  "(InPort 20 4)" -> "(OutPort 20 2)";
  "(InPort 20 4)" -> "(OutPort 20 3)";
  "(InPort 20 4)" -> "(OutPort 20 4)";
  "(OutPort 1 3)" -> "(InPort 9 1)";
  "(OutPort 1 4)" -> "(InPort 10 1)";
  "(OutPort 2 3)" -> "(InPort 9 2)";
  "(OutPort 2 4)" -> "(InPort 10 2)";
  "(OutPort 3 3)" -> "(InPort 11 1)";
  "(OutPort 3 4)" -> "(InPort 12 1)";
  "(OutPort 4 3)" -> "(InPort 11 2)";
  "(OutPort 4 4)" -> "(InPort 12 2)";
  "(OutPort 5 3)" -> "(InPort 13 1)";
  "(OutPort 5 4)" -> "(InPort 14 1)";
  "(OutPort 6 3)" -> "(InPort 13 2)";
  "(OutPort 6 4)" -> "(InPort 14 2)";
  "(OutPort 7 3)" -> "(InPort 15 1)";
  "(OutPort 7 4)" -> "(InPort 16 1)";
  "(OutPort 8 3)" -> "(InPort 15 2)";
  "(OutPort 8 4)" -> "(InPort 16 2)";
  "(OutPort 9 1)" -> "(InPort 1 3)";
  "(OutPort 9 2)" -> "(InPort 2 3)";
  "(OutPort 9 3)" -> "(InPort 17 1)";
  "(OutPort 9 4)" -> "(InPort 18 1)";
  "(OutPort 10 1)" -> "(InPort 1 4)";
  "(OutPort 10 2)" -> "(InPort 2 4)";
  "(OutPort 10 3)" -> "(InPort 19 1)";
  "(OutPort 10 4)" -> "(InPort 20 1)";
  "(OutPort 11 1)" -> "(InPort 3 3)";
  "(OutPort 11 2)" -> "(InPort 4 3)";
  "(OutPort 11 3)" -> "(InPort 17 2)";
  "(OutPort 11 4)" -> "(InPort 19 2)";
  "(OutPort 12 1)" -> "(InPort 3 4)";
  "(OutPort 12 2)" -> "(InPort 4 4)";
  "(OutPort 12 3)" -> "(InPort 18 2)";
  "(OutPort 12 4)" -> "(InPort 20 2)";
  "(OutPort 13 1)" -> "(InPort 5 3)";
  "(OutPort 13 2)" -> "(InPort 6 3)";
  "(OutPort 13 3)" -> "(InPort 17 3)";
  "(OutPort 13 4)" -> "(InPort 18 3)";
  "(OutPort 14 1)" -> "(InPort 5 4)";
  "(OutPort 14 2)" -> "(InPort 6 4)";
  "(OutPort 14 3)" -> "(InPort 19 3)";
  "(OutPort 14 4)" -> "(InPort 20 3)";
  "(OutPort 15 1)" -> "(InPort 7 3)";
  "(OutPort 15 2)" -> "(InPort 8 3)";
  "(OutPort 15 3)" -> "(InPort 17 4)";
  "(OutPort 15 4)" -> "(InPort 19 4)";
  "(OutPort 16 1)" -> "(InPort 7 4)";
  "(OutPort 16 2)" -> "(InPort 8 4)";
  "(OutPort 16 3)" -> "(InPort 18 4)";
  "(OutPort 16 4)" -> "(InPort 20 4)";
  "(OutPort 17 1)" -> "(InPort 9 3)";
  "(OutPort 17 2)" -> "(InPort 11 3)";
  "(OutPort 17 3)" -> "(InPort 13 3)";
  "(OutPort 17 4)" -> "(InPort 15 3)";
  "(OutPort 18 1)" -> "(InPort 9 4)";
  "(OutPort 18 2)" -> "(InPort 12 3)";
  "(OutPort 18 3)" -> "(InPort 13 4)";
  "(OutPort 18 4)" -> "(InPort 16 3)";
  "(OutPort 19 1)" -> "(InPort 10 3)";
  "(OutPort 19 2)" -> "(InPort 11 4)";
  "(OutPort 19 3)" -> "(InPort 14 3)";
  "(OutPort 19 4)" -> "(InPort 15 4)";
  "(OutPort 20 1)" -> "(InPort 10 4)";
  "(OutPort 20 2)" -> "(InPort 12 4)";
  "(OutPort 20 3)" -> "(InPort 14 4)";
  "(OutPort 20 4)" -> "(InPort 16 4)";
  
  }