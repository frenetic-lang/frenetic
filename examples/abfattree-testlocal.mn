
import re
import sys

# Mininet imports
from mininet.log import lg, info, error, debug, output
from mininet.util import quietRun
from mininet.node import Host, UserSwitch, RemoteController
from mininet.cli import CLI
from mininet.net import Mininet

def start(ip="127.0.0.1",port=6633):

    ctrlr = lambda n: RemoteController(n, defaultIP=ip, port=port, inNamespace=False)
    net = Mininet(switch=UserSwitch, controller=ctrlr, autoStaticArp=True)
    c1 = net.addController('c1')

    ####### End of static Mininet prologue ######

    h1 = net.addHost('h1', mac='00:00:00:00:00:01', ip='10.0.0.1')
    h10 = net.addHost('h10', mac='00:00:00:00:00:0a', ip='10.0.0.10')
    h11 = net.addHost('h11', mac='00:00:00:00:00:0b', ip='10.0.0.11')
    h12 = net.addHost('h12', mac='00:00:00:00:00:0c', ip='10.0.0.12')
    h13 = net.addHost('h13', mac='00:00:00:00:00:0d', ip='10.0.0.13')
    h14 = net.addHost('h14', mac='00:00:00:00:00:0e', ip='10.0.0.14')
    h15 = net.addHost('h15', mac='00:00:00:00:00:0f', ip='10.0.0.15')
    h16 = net.addHost('h16', mac='00:00:00:00:00:10', ip='10.0.0.16')
    h2 = net.addHost('h2', mac='00:00:00:00:00:02', ip='10.0.0.2')
    h3 = net.addHost('h3', mac='00:00:00:00:00:03', ip='10.0.0.3')
    h4 = net.addHost('h4', mac='00:00:00:00:00:04', ip='10.0.0.4')
    h5 = net.addHost('h5', mac='00:00:00:00:00:05', ip='10.0.0.5')
    h6 = net.addHost('h6', mac='00:00:00:00:00:06', ip='10.0.0.6')
    h7 = net.addHost('h7', mac='00:00:00:00:00:07', ip='10.0.0.7')
    h8 = net.addHost('h8', mac='00:00:00:00:00:08', ip='10.0.0.8')
    h9 = net.addHost('h9', mac='00:00:00:00:00:09', ip='10.0.0.9')
    s1 = net.addSwitch('s1')
    s10 = net.addSwitch('s10')
    s11 = net.addSwitch('s11')
    s12 = net.addSwitch('s12')
    s13 = net.addSwitch('s13')
    s14 = net.addSwitch('s14')
    s15 = net.addSwitch('s15')
    s16 = net.addSwitch('s16')
    s17 = net.addSwitch('s17')
    s18 = net.addSwitch('s18')
    s19 = net.addSwitch('s19')
    s2 = net.addSwitch('s2')
    s20 = net.addSwitch('s20')
    s3 = net.addSwitch('s3')
    s4 = net.addSwitch('s4')
    s5 = net.addSwitch('s5')
    s6 = net.addSwitch('s6')
    s7 = net.addSwitch('s7')
    s8 = net.addSwitch('s8')
    s9 = net.addSwitch('s9')
    net.addLink(h1, s1, 1, 1)
    net.addLink(h10, s5, 1, 2)
    net.addLink(h11, s6, 1, 1)
    net.addLink(h12, s6, 1, 2)
    net.addLink(h13, s7, 1, 1)
    net.addLink(h14, s7, 1, 2)
    net.addLink(h15, s8, 1, 1)
    net.addLink(h16, s8, 1, 2)
    net.addLink(h2, s1, 1, 2)
    net.addLink(h3, s2, 1, 1)
    net.addLink(h4, s2, 1, 2)
    net.addLink(h5, s3, 1, 1)
    net.addLink(h6, s3, 1, 2)
    net.addLink(h7, s4, 1, 1)
    net.addLink(h8, s4, 1, 2)
    net.addLink(h9, s5, 1, 1)
    net.addLink(s1, s10, 4, 1)
    net.addLink(s1, s9, 3, 1)
    net.addLink(s10, s19, 3, 1)
    net.addLink(s10, s2, 2, 4)
    net.addLink(s10, s20, 4, 1)
    net.addLink(s11, s17, 3, 2)
    net.addLink(s11, s19, 4, 2)
    net.addLink(s11, s3, 1, 3)
    net.addLink(s11, s4, 2, 3)
    net.addLink(s12, s18, 3, 2)
    net.addLink(s12, s20, 4, 2)
    net.addLink(s12, s3, 1, 4)
    net.addLink(s12, s4, 2, 4)
    net.addLink(s13, s17, 3, 3)
    net.addLink(s13, s18, 4, 3)
    net.addLink(s13, s5, 1, 3)
    net.addLink(s13, s6, 2, 3)
    net.addLink(s14, s19, 3, 3)
    net.addLink(s14, s20, 4, 3)
    net.addLink(s14, s5, 1, 4)
    net.addLink(s14, s6, 2, 4)
    net.addLink(s15, s17, 3, 4)
    net.addLink(s15, s19, 4, 4)
    net.addLink(s15, s7, 1, 3)
    net.addLink(s15, s8, 2, 3)
    net.addLink(s16, s18, 3, 4)
    net.addLink(s16, s20, 4, 4)
    net.addLink(s16, s7, 1, 4)
    net.addLink(s16, s8, 2, 4)
    net.addLink(s17, s9, 1, 3)
    net.addLink(s18, s9, 1, 4)
    net.addLink(s2, s9, 3, 2)

    ###### Start of static Mininet epilogue ######
    # Set up logging etc.
    lg.setLogLevel('info')
    lg.setLogLevel('output')

    # Start the network and prime other ARP caches
    net.start()

    # Enter CLI mode
    output("Network ready\n")
    output("Press Ctrl-d or type exit to quit\n")
    CLI(net)
    net.stop()

start()
